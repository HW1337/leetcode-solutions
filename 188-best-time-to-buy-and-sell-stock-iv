/**
 * @param {number} k
 * @param {number[]} prices
 * @return {number}
 */
var maxProfit = function(k, prices) {
    if (k === 0 || prices.length === 0) {
        return 0;
    }

    if (k >= prices.length / 2) {

        let maxProfit = 0;
        for (let i = 1; i < prices.length; i++) {
            if (prices[i] > prices[i - 1]) {
                maxProfit += prices[i] - prices[i - 1];
            }
        }
        return maxProfit;
    }

    let dp = new Array(k + 1).fill(0).map(() => new Array(prices.length).fill(0));

    for (let trans = 1; trans <= k; trans++) {
        let maxVal = -prices[0];
        for (let day = 1; day < prices.length; day++) {
            dp[trans][day] = Math.max(dp[trans][day - 1], prices[day] + maxVal);
            maxVal = Math.max(maxVal, dp[trans - 1][day] - prices[day]);
        }
    }

    return dp[k][prices.length - 1];
};
