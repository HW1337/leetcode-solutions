/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @return {boolean}
 */
var isBalanced = function(root) {
    return checkBalanced(root).isBalanced;
};

const checkBalanced = (root) => {
    if (root === null) {
        return { height: -1, isBalanced: true };
    }

    const leftResult = checkBalanced(root.left);
    const rightResult = checkBalanced(root.right);

    const height = Math.max(leftResult.height, rightResult.height) + 1;
    const heightDifference = Math.abs(leftResult.height - rightResult.height);
    const isAcceptableHeight = heightDifference <= 1;
    const isBalanced = leftResult.isBalanced && rightResult.isBalanced && isAcceptableHeight;

    return { height, isBalanced };
};
