/**
 * @param {string} s
 * @param {string} p
 * @return {boolean}
 */
var isMatch = function (text, pattern) {
    const dp = initTabulation(text, pattern); 

    for (let row = text.length; row >= 0; row--) { 
        for (let col = pattern.length - 1; col >= 0; col--) {
            const isTextDefined = row < text.length,
                isTextAndPatternEqual = pattern[col] === text[row],
                isPatternPeriod = pattern[col] === '.',
                isFirstMatch = isTextDefined && (isTextAndPatternEqual || isPatternPeriod),
                isNextPatternWildCard = col + 1 < pattern.length && pattern[col + 1] === '*';

            dp[row][col] = isNextPatternWildCard 
                ? dp[row][col + 2] || (isFirstMatch && dp[row + 1][col])
                : isFirstMatch && dp[row + 1][col + 1];
        }
    }

    return dp[0][0];
};

var initTabulation = function (text, pattern) {
    const dp = new Array(text.length + 1) 
        .fill()
        .map(() => new Array(pattern.length + 1).fill(false)); 

    dp[text.length][pattern.length] = true; 

    return dp;
};
