/**
 * @param {string} s
 * @return {boolean}
 */
const isNumber = (s) => {
  const state = [
    {}, 
    {'blank': 1, 'sign': 2, 'digit': 3, '.': 4}, 
    {'digit': 3, '.': 4},
    {'digit': 3, '.': 5, 'e': 6, 'blank': 9},
    {'digit': 5},
    {'digit': 5, 'e': 6, 'blank': 9},
    {'sign': 7, 'digit': 8},
    {'digit': 8},
    {'digit': 8, 'blank': 9},
    {'blank': 9}
  ];
  
  const validState = [3, 5, 8, 9];
  let currentState = 1;
  const len = s.length;
  
  for (let i = 0; i < len; i++) {
    let str = s[i];
    let type = '';
    
    if (str >= '0' && str <= '9') {
      type = 'digit';
    } else if (str === '+' || str === '-') {
      type = 'sign';
    } else if (str === ' ') {
      type = 'blank';
    } else {
      type = str;
    }
    
    if (state[currentState][type] === undefined) {
      return false;
    } else {
      currentState = state[currentState][type];
    }
  }
  
  return validState.includes(currentState);
};
