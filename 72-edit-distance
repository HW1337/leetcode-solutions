/**
 * @param {string} word1
 * @param {string} word2
 * @return {number}
 */
var minDistance = function(word1, word2) {
    const m = word1.length;
    const n = word2.length;

    if (m === 0) return n;
    if (n === 0) return m;

    const dp = Array.from({ length: m + 1 }, () => Array(n + 1).fill(0));

    for (let i = 0; i <= m; i++) {
        dp[i][0] = i;
    }

    for (let j = 0; j <= n; j++) {
        dp[0][j] = j;
    }

    for (let i = 1; i <= m; i++) {
        for (let j = 1; j <= n; j++) {
            const insertion = dp[i][j - 1] + 1;
            const deletion = dp[i - 1][j] + 1;
            const substitution = dp[i - 1][j - 1] + (word1[i - 1] !== word2[j - 1] ? 1 : 0);

            dp[i][j] = Math.min(insertion, deletion, substitution);
        }
    }

    return dp[m][n];
};
