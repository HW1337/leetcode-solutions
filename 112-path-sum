/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} targetSum
 * @return {boolean}
 */
class TreeNode {
    constructor(val, left = null, right = null) {
        this.val = val;
        this.left = left;
        this.right = right;
    }
}

const hasPathSum = (root, targetSum) => {
    if (!root) return false;

    const stack = [{ node: root, currentSum: 0 }];

    while (stack.length > 0) {
        const { node, currentSum } = stack.pop();

        if (!node.left && !node.right && currentSum + node.val === targetSum) {
            return true;
        }

        if (node.right) {
            stack.push({ node: node.right, currentSum: currentSum + node.val });
        }

        if (node.left) {
            stack.push({ node: node.left, currentSum: currentSum + node.val });
        }
    }

    return false;
};
