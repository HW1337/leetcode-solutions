/**
 * // Definition for a Node.
 * function Node(val, next, random) {
 *    this.val = val;
 *    this.next = next;
 *    this.random = random;
 * };
 */

/**
 * @param {Node} head
 * @return {Node}
 */
var copyRandomList = function(head) {
    if (!head) return null;

    cloneNodes(head);
    connectRandomNodes(head);

    return splitList(head);
};

const cloneNodes = (head) => {
    let current = head;

    while (current) {
        const newNode = new Node(current.val);
        newNode.next = current.next;
        current.next = newNode;
        current = newNode.next;
    }
}

const connectRandomNodes = (head) => {
    let current = head;

    while (current) {
        current.next.random = current.random ? current.random.next : null;
        current = current.next.next;
    }
}

const splitList = (head) => {
    let original = head;
    let clonedHead = head.next;
    let cloned = clonedHead;

    while (original) {
        original.next = original.next ? original.next.next : null;
        cloned.next = cloned.next ? cloned.next.next : null;

        original = original.next;
        cloned = cloned.next;
    }

    return clonedHead;
}
