/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {ListNode} head
 * @return {TreeNode}
 */
var sortedListToBST = function(head) {
    if (!head) return null;

    const getMiddle = (start, end) => {
        let slow = start;
        let fast = start;
        
        while (fast !== end && fast.next !== end) {
            slow = slow.next;
            fast = fast.next.next;
        }
        
        return slow;
    };

    const buildBST = (start, end) => {
        if (start === end) return null;

        const mid = getMiddle(start, end);
        const node = new TreeNode(mid.val);

        node.left = buildBST(start, mid);
        node.right = buildBST(mid.next, end);

        return node;
    };

    return buildBST(head, null);
};
