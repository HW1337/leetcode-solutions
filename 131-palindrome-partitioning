/**
 * @param {string} s
 * @return {string[][]}
 */
var partition = function(s) {
     const partitions = [];

    const isPalindrome = (str, left, right) => {
        while (left < right) {
            if (str[left] !== str[right]) {
                return false;
            }
            left++;
            right--;
        }
        return true;
    };

    const backTrack = (start, currentPartition) => {
        if (start === s.length) {
            partitions.push([...currentPartition]);
            return;
        }

        for (let end = start; end < s.length; end++) {
            if (isPalindrome(s, start, end)) {
                currentPartition.push(s.slice(start, end + 1));
                backTrack(end + 1, currentPartition);
                currentPartition.pop();
            }
        }
    };

    backTrack(0, []);

    return partitions;
}
