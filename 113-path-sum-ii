/**
 * Definition for a binary tree node.
 * function TreeNode(val, left, right) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.left = (left===undefined ? null : left)
 *     this.right = (right===undefined ? null : right)
 * }
 */
/**
 * @param {TreeNode} root
 * @param {number} targetSum
 * @return {number[][]}
 */
var pathSum = function(root, targetSum) {
    const result = [];

    const dfs = (node, currentPath, currentSum) => {
        if (!node) return;

        currentPath.push(node.val);
        currentSum += node.val;

        if (!node.left && !node.right) {
            if (currentSum === targetSum) {
                result.push([...currentPath]);
            }
        } else {
            dfs(node.left, currentPath, currentSum);
            dfs(node.right, currentPath, currentSum);
        }

        currentPath.pop();
    };

    dfs(root, [], 0);
    return result;
};
